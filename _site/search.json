[
  {
    "objectID": "competition.html",
    "href": "competition.html",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics",
    "crumbs": [
      "Competition"
    ]
  },
  {
    "objectID": "competition.html#title-2-header",
    "href": "competition.html#title-2-header",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics",
    "crumbs": [
      "Competition"
    ]
  },
  {
    "objectID": "Cleansing_Projects/project3.html",
    "href": "Cleansing_Projects/project3.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Data Cleansing",
      "Project 3"
    ]
  },
  {
    "objectID": "Cleansing_Projects/project1.html",
    "href": "Cleansing_Projects/project1.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Data Cleansing",
      "Project 1"
    ]
  },
  {
    "objectID": "Cleansing_Projects/project4.html",
    "href": "Cleansing_Projects/project4.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Data Cleansing",
      "Project 4"
    ]
  },
  {
    "objectID": "Full_Stack/project2.html",
    "href": "Full_Stack/project2.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Full Stack",
      "Project 2"
    ]
  },
  {
    "objectID": "Full_Stack/project5.html",
    "href": "Full_Stack/project5.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Full Stack",
      "Project 5"
    ]
  },
  {
    "objectID": "Competition/project3.html",
    "href": "Competition/project3.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Competition",
      "Project 3"
    ]
  },
  {
    "objectID": "Competition/project1.html",
    "href": "Competition/project1.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Competition",
      "Project 1"
    ]
  },
  {
    "objectID": "Competition/project4.html",
    "href": "Competition/project4.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Competition",
      "Project 4"
    ]
  },
  {
    "objectID": "Cleansing_Exploration/project2.html",
    "href": "Cleansing_Exploration/project2.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top"
  },
  {
    "objectID": "Cleansing_Exploration/project5.html",
    "href": "Cleansing_Exploration/project5.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top"
  },
  {
    "objectID": "story_telling.html",
    "href": "story_telling.html",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics",
    "crumbs": [
      "Story Telling"
    ]
  },
  {
    "objectID": "story_telling.html#title-2-header",
    "href": "story_telling.html#title-2-header",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics",
    "crumbs": [
      "Story Telling"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics"
  },
  {
    "objectID": "index.html#title-2-header",
    "href": "index.html#title-2-header",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics"
  },
  {
    "objectID": "Machine_Learning/project2.html",
    "href": "Machine_Learning/project2.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Machine Learning",
      "Project 2"
    ]
  },
  {
    "objectID": "Machine_Learning/project5.html",
    "href": "Machine_Learning/project5.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Machine Learning",
      "Project 5"
    ]
  },
  {
    "objectID": "cleansing.html",
    "href": "cleansing.html",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics",
    "crumbs": [
      "Data Cleansing"
    ]
  },
  {
    "objectID": "cleansing.html#title-2-header",
    "href": "cleansing.html#title-2-header",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics",
    "crumbs": [
      "Data Cleansing"
    ]
  },
  {
    "objectID": "exploration.html",
    "href": "exploration.html",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics",
    "crumbs": [
      "Data Exploration"
    ]
  },
  {
    "objectID": "exploration.html#title-2-header",
    "href": "exploration.html#title-2-header",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics",
    "crumbs": [
      "Data Exploration"
    ]
  },
  {
    "objectID": "Story_Telling/project2.html",
    "href": "Story_Telling/project2.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Story Telling",
      "Project 2"
    ]
  },
  {
    "objectID": "Story_Telling/project5.html",
    "href": "Story_Telling/project5.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Story Telling",
      "Project 5"
    ]
  },
  {
    "objectID": "Story_Telling/project4.html",
    "href": "Story_Telling/project4.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Story Telling",
      "Project 4"
    ]
  },
  {
    "objectID": "Story_Telling/project1.html",
    "href": "Story_Telling/project1.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Story Telling",
      "Project 1"
    ]
  },
  {
    "objectID": "Story_Telling/project3.html",
    "href": "Story_Telling/project3.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Story Telling",
      "Project 3"
    ]
  },
  {
    "objectID": "resume.html",
    "href": "resume.html",
    "title": "Tucker Trost’s CV",
    "section": "",
    "text": "Data Science Student\n\nTuckertrost16@gmail.com | My Linkedin page\n\n\n\nStudying to earn my Bachleor’s degree in Data Science from Brigham Young University - Idaho\n\n\nPython | SQL | Tableau | Microsoft Excel\n\n\n\nExploratory Data Analysis, Data Visualizations, Interactive Dashboards, Machine Learning\n\n\n\n\nSuperstore KPI Dashboard\n\nDeveloped dynamic KPI Dashboard built in Tableau\nUtilized complex parameters and calculated fields to present easily identifiableinformation to stakeholders\n\nPortland Crime Analysis\n\nExploratory data anlysis oin Portland, Oregon crime data\nData cleaning in Excel and SQL\nPython to analyze crime trends and gather data for visualization\nVisualized findings in a dynamic Tableau dashboard and offered recommendations for visitor safety\n\n\n\n\n2023 - Now Brigham Young University - Idaho\n\nBachelor of Science, Data Science\n\n2019-2022 Brigham Young University - Idaho\n\nAssociates of Science, General Studies\n\n\n\n\n2023 Google Data Analystics Professional Certificate\nCoursera"
  },
  {
    "objectID": "resume.html#currently",
    "href": "resume.html#currently",
    "title": "Tucker Trost’s CV",
    "section": "",
    "text": "Studying to earn my Bachleor’s degree in Data Science from Brigham Young University - Idaho\n\n\nPython | SQL | Tableau | Microsoft Excel\n\n\n\nExploratory Data Analysis, Data Visualizations, Interactive Dashboards, Machine Learning"
  },
  {
    "objectID": "resume.html#education",
    "href": "resume.html#education",
    "title": "Tucker Trost’s CV",
    "section": "",
    "text": "2023 - Now Brigham Young University - Idaho\n\nBachelor of Science, Data Science\n\n2019-2022 Brigham Young University - Idaho\n\nAssociates of Science, General Studies"
  },
  {
    "objectID": "resume.html#awards",
    "href": "resume.html#awards",
    "title": "Tucker Trost’s CV",
    "section": "",
    "text": "2023 Google Data Analystics Professional Certificate\nCoursera"
  },
  {
    "objectID": "resume.html#publications",
    "href": "resume.html#publications",
    "title": "Isaac Newtons’s CV",
    "section": "",
    "text": "1669 Newton Sir I, De analysi per æquationes numero terminorum infinitas.\n1669 Lectiones opticæ.\netc. etc. etc.\n\n\n\n2012 Infinitesimal calculus for solutions to physics problems, SMBC patent 001"
  },
  {
    "objectID": "resume.html#occupation",
    "href": "resume.html#occupation",
    "title": "Isaac Newtons’s CV",
    "section": "",
    "text": "1600 Royal Mint, London\n\nWarden\nMinted coins\n\n1600 Lucasian professor of Mathematics, Cambridge University"
  },
  {
    "objectID": "Machine_Learning/project4.html",
    "href": "Machine_Learning/project4.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Machine Learning",
      "Project 4"
    ]
  },
  {
    "objectID": "Machine_Learning/project1.html",
    "href": "Machine_Learning/project1.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Machine Learning",
      "Project 1"
    ]
  },
  {
    "objectID": "Machine_Learning/project3.html",
    "href": "Machine_Learning/project3.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Machine Learning",
      "Project 3"
    ]
  },
  {
    "objectID": "ml.html",
    "href": "ml.html",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics",
    "crumbs": [
      "Machine Learning"
    ]
  },
  {
    "objectID": "ml.html#title-2-header",
    "href": "ml.html#title-2-header",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics",
    "crumbs": [
      "Machine Learning"
    ]
  },
  {
    "objectID": "Cleansing_Exploration/project4.html",
    "href": "Cleansing_Exploration/project4.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top"
  },
  {
    "objectID": "Cleansing_Exploration/project1.html",
    "href": "Cleansing_Exploration/project1.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top"
  },
  {
    "objectID": "Cleansing_Exploration/project3.html",
    "href": "Cleansing_Exploration/project3.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top"
  },
  {
    "objectID": "Competition/project5.html",
    "href": "Competition/project5.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Competition",
      "Project 5"
    ]
  },
  {
    "objectID": "Competition/project2.html",
    "href": "Competition/project2.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Competition",
      "Project 2"
    ]
  },
  {
    "objectID": "Full_Stack/project4.html",
    "href": "Full_Stack/project4.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Full Stack",
      "Project 4"
    ]
  },
  {
    "objectID": "Full_Stack/project1.html",
    "href": "Full_Stack/project1.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Full Stack",
      "Project 1"
    ]
  },
  {
    "objectID": "Full_Stack/project3.html",
    "href": "Full_Stack/project3.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Full Stack",
      "Project 3"
    ]
  },
  {
    "objectID": "Cleansing_Projects/project5.html",
    "href": "Cleansing_Projects/project5.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Data Cleansing",
      "Project 5"
    ]
  },
  {
    "objectID": "Cleansing_Projects/project2.html",
    "href": "Cleansing_Projects/project2.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Data Cleansing",
      "Project 2"
    ]
  },
  {
    "objectID": "full_stack.html",
    "href": "full_stack.html",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics",
    "crumbs": [
      "Full Stack"
    ]
  },
  {
    "objectID": "full_stack.html#title-2-header",
    "href": "full_stack.html#title-2-header",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics",
    "crumbs": [
      "Full Stack"
    ]
  },
  {
    "objectID": "Cleansing_Projects/project1.html#data-source",
    "href": "Cleansing_Projects/project1.html#data-source",
    "title": "Portland Crime Data Cleansing",
    "section": "Data Source",
    "text": "Data Source\nThe dateset that I am using was accessed directly from Portland Police Bureau’s Open Data initiative; compiled from 2015-2023. This dataset is being used under this license.",
    "crumbs": [
      "Data Cleansing",
      "Project 1"
    ]
  },
  {
    "objectID": "Cleansing_Projects/project1.html#data-dictionary",
    "href": "Cleansing_Projects/project1.html#data-dictionary",
    "title": "Portland Crime Data Cleansing",
    "section": "Data Dictionary",
    "text": "Data Dictionary\nAddress: Address of reported incident at the 100 block level (e.g.: 1111 SW 2nd Ave would be 1100 Block SW 2nd Ave).\nCase Number: The case year and number for the reported incident (YY-######).\nCrime Against: Crime against category (Person, Property, or Society).\nNeighborhood: Neighborhood where incident occurred. If the neighborhood name is missing, the incident occurred outside of the boundaries of the Portland neighborhoods or at a location that could not be assigned to a specific address in the system. (e.g., Portland, near Washington Park, on the streetcar, etc.).\nOccur Date: Date the incident occurred. The exact occur date is sometimes unknown. In most situations, the first possible date the crime could have occurred is used as the occur date. (For example, victims return home from a week-long vacation to find their home burglarized. The burglary could have occurred at any point during the week. The first date of their vacation would be listed as the occur date.)\nOccur Time: Time the incident occurred. The exact occur time is sometimes unknown. In most situations, the first possible time the crime could have occurred is used as the occur time. The time is reported in the 24-hour clock format, with the first two digits representing hour (ranges from 00 to 23) and the second two digits representing minutes (ranges from 00 to 59).\nOffense Category: Category of offense (for example, Assault Offenses).\nOffense Type: Type of offense (for example, Aggravated Assault)Note: The statistic for Homicide Offenses has been updated in the Group A Crimes report to align with the 2019 FBI NIBRS definitions. The statistic for Homicide Offenses includes (09A) Murder & Non-negligent Manslaughter and (09B) Negligent Manslaughter. As of January 1, 2019, the FBI expanded the definition of negligent manslaughter to include traffic fatalities that result in an arrest for driving under the influence, distracted driving, or reckless driving. The change in definition impacts the 2019 homicide offenses statistic and the comparability of 2019 homicide statistics to prior year.\nOpen Data Lat/Lon: Generalized Latitude / Longitude of the reported incident. For offenses that occurred at a specific address, the point is mapped to the block’s midpoint. Offenses that occurred at an intersection is mapped to the intersection centroid.\nOpen Data X/Y: Generalized XY point of the reported incident. For offenses that occurred at a specific address, the point is mapped to the block’s midpoint. Offenses that occurred at an intersection is mapped to the intersection centroid. To protect the identity of victims and other privacy concerns, the points of certain case types are not released. XY points use the Oregon State Plane North (3601), NAD83 HARN, US International Feet coordinate system.\nOffense Count: Number of offenses per incident. Offenses (i.e. this field) are summed for counting purposes.\n\nPrepare\n\n\nRead and format project data\n# Load in Data\npcrime_15 = pd.read_csv('CrimeData-2015.csv')\npcrime_16 = pd.read_csv('CrimeData-2016.csv')\npcrime_17 = pd.read_csv('CrimeData-2017.csv')\npcrime_18 = pd.read_csv('CrimeData-2018.csv')\npcrime_19 = pd.read_csv('CrimeData-2019.csv')\npcrime_20 = pd.read_csv('CrimeData-2020.csv')\npcrime_21 = pd.read_csv('CrimeData-2021.csv')\npcrime_22 = pd.read_csv('CrimeData-2022.csv')\npcrime_23 = pd.read_csv('CrimeData-2023.csv')\n\n# Combine Datasets\npcrime_combined = pd.concat([pcrime_15,pcrime_16,pcrime_17,pcrime_18,pcrime_19,pcrime_20,pcrime_21,pcrime_22,pcrime_23], ignore_index=True)\npcrime_combined.head()\n\n\n\n\n\n\n\n\n\n\nAddress\nCaseNumber\nCrimeAgainst\nNeighborhood\nOccurDate\nOccurTime\nOffenseCategory\nOffenseType\nOpenDataLat\nOpenDataLon\nOpenDataX\nOpenDataY\nReportDate\nOffenseCount\n\n\n\n\n0\nNaN\n15-X197430\nPerson\nPiedmont\n5/12/2015\n1400\nAssault Offenses\nIntimidation\nNaN\nNaN\nNaN\nNaN\n5/12/2015\n1\n\n\n1\nNaN\n15-X4282999\nPerson\nBuckman West\n5/1/2015\n2143\nAssault Offenses\nSimple Assault\nNaN\nNaN\nNaN\nNaN\n5/1/2015\n1\n\n\n2\nNaN\n15-X4283033\nPerson\nUniversity Park\n5/1/2015\n1625\nAssault Offenses\nSimple Assault\nNaN\nNaN\nNaN\nNaN\n5/1/2015\n1\n\n\n3\nNaN\n15-X4283218\nPerson\nMadison South\n5/1/2015\n1820\nAssault Offenses\nSimple Assault\nNaN\nNaN\nNaN\nNaN\n5/1/2015\n1\n\n\n4\nNaN\n15-X4283218\nPerson\nMadison South\n5/1/2015\n1820\nKidnapping/Abduction\nKidnapping/Abduction\nNaN\nNaN\nNaN\nNaN\n5/1/2015\n1",
    "crumbs": [
      "Data Cleansing",
      "Project 1"
    ]
  },
  {
    "objectID": "Cleansing_Projects/project1.html#what-is-our-goal",
    "href": "Cleansing_Projects/project1.html#what-is-our-goal",
    "title": "Portland Crime Data Cleansing",
    "section": "What is our goal?",
    "text": "What is our goal?\nThinking forward to the analysis that I want to perform with this data, I need to understand what I am looking for when it comes to cleaning. I know that I want to focus my analysis on the distribution of different offense types and categories across the various neighborhoods of Portland. Additionally, I’d like to get insight into the temporal trends that lie within the data. Based on this understanding, I get a better sense of what aspects of the data need to be cleaned.\n\n\nIdentify Missing Data\npcrime_combined.isna().sum()\n\n\nAddress            44998\nCaseNumber             0\nCrimeAgainst           0\nNeighborhood       17566\nOccurDate              0\nOccurTime              0\nOffenseCategory        0\nOffenseType            0\nOpenDataLat        56511\nOpenDataLon        56511\nOpenDataX          56511\nOpenDataY          56511\nReportDate             0\nOffenseCount           0\ndtype: int64",
    "crumbs": [
      "Data Cleansing",
      "Project 1"
    ]
  },
  {
    "objectID": "Cleansing_Projects/project1.html#initial-observations",
    "href": "Cleansing_Projects/project1.html#initial-observations",
    "title": "Portland Crime Data Cleansing",
    "section": "Initial Observations",
    "text": "Initial Observations\n1. A time to report column would be useful * Convert OccurDate and ReportDate to datetime * Create a time to report column\n2. OpenDataX/Y don’t seem necessary for our analysis * Drop OpenDataX and OpenDataY columns\n3. Address column seems to be redundant as most entries are just a general location * Drop Address column\n4. Neighborhood averages can be used to find lat/lon * Drop rows with missing Neighborhood and OpenDataLat * Replace all rows with neighborhood but missing Lat/Lon data with average Lat/Lon of their neighborhood\n\nData Cleaning\n\n\nCleaning\n# Calculate average Lat/Lon for each neighborhood\nneighborhood_means = pcrime_combined.groupby('Neighborhood')[['OpenDataLat','OpenDataLon']].transform('mean')\n\n# Clean the data\npcrime_cleaned = (\n  pcrime_combined\n  .drop(columns=['Address','OpenDataX','OpenDataY']) # Drop X/Y\n  .dropna(subset=['OpenDataLat','Neighborhood'], how='all') # Drop missing lat/lon and Neighborhoods\n  .assign(\n    OccurDate = pd.to_datetime(pcrime_combined['OccurDate']), # Convert dates to datetime\n    ReportDate = pd.to_datetime(pcrime_combined['ReportDate']),\n    ReportDiff = lambda x: (x['ReportDate'] - x['OccurDate']).dt.days, # Calculate time to report\n    OpenDataLat = lambda x: x['OpenDataLat'].fillna(neighborhood_means['OpenDataLat']), # Fill missing Lat/Lon with average Lat/Lon of given neighborhood\n    OpenDataLon = lambda x: x['OpenDataLon'].fillna(neighborhood_means['OpenDataLon'])\n)\n)\n\npcrime_cleaned\n\n\n\n\n\n\n\n\n\n\nCaseNumber\nCrimeAgainst\nNeighborhood\nOccurDate\nOccurTime\nOffenseCategory\nOffenseType\nOpenDataLat\nOpenDataLon\nReportDate\nOffenseCount\nReportDiff\n\n\n\n\n0\n15-X197430\nPerson\nPiedmont\n2015-05-12\n1400\nAssault Offenses\nIntimidation\n45.575321\n-122.669950\n2015-05-12\n1\n0\n\n\n1\n15-X4282999\nPerson\nBuckman West\n2015-05-01\n2143\nAssault Offenses\nSimple Assault\n45.517973\n-122.659334\n2015-05-01\n1\n0\n\n\n2\n15-X4283033\nPerson\nUniversity Park\n2015-05-01\n1625\nAssault Offenses\nSimple Assault\n45.580393\n-122.727295\n2015-05-01\n1\n0\n\n\n3\n15-X4283218\nPerson\nMadison South\n2015-05-01\n1820\nAssault Offenses\nSimple Assault\n45.540839\n-122.578812\n2015-05-01\n1\n0\n\n\n4\n15-X4283218\nPerson\nMadison South\n2015-05-01\n1820\nKidnapping/Abduction\nKidnapping/Abduction\n45.540839\n-122.578812\n2015-05-01\n1\n0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n531881\n23-225440\nSociety\nSylvan-Highlands\n2023-08-27\n1420\nWeapon Law Violations\nWeapons Law Violations\n45.508945\n-122.731195\n2023-08-27\n1\n0\n\n\n531882\n23-51637\nProperty\nArlington Heights\n2023-02-23\n330\nMotor Vehicle Theft\nMotor Vehicle Theft\n45.506744\n-122.713355\n2023-02-25\n1\n2\n\n\n531883\n23-227984\nPerson\nGoose Hollow\n2023-08-30\n920\nAssault Offenses\nAggravated Assault\n45.515555\n-122.693709\n2023-08-30\n1\n0\n\n\n531884\n23-40689\nProperty\nForest Park\n2023-02-13\n1130\nMotor Vehicle Theft\nMotor Vehicle Theft\n45.540437\n-122.736728\n2023-02-13\n1\n0\n\n\n531885\n23-137815\nProperty\nForest Park\n2023-05-23\n1300\nLarceny Offenses\nTheft From Motor Vehicle\n45.540437\n-122.736728\n2023-05-26\n1\n3\n\n\n\n\n522201 rows × 12 columns\n\n\n\n\nNow we can check and see how we did filling in our missing data.\n\n\nCheck missing data\npcrime_cleaned.isna().sum()\n\n\nCaseNumber            0\nCrimeAgainst          0\nNeighborhood       7881\nOccurDate             0\nOccurTime             0\nOffenseCategory       0\nOffenseType           0\nOpenDataLat           0\nOpenDataLon           0\nReportDate            0\nOffenseCount          0\nReportDiff            0\ndtype: int64\n\n\n\n\nFinal Thoughts\nWe have now cleaned our data into a useable state for our analysis. We went from many missing rows from in many columns to only 7881 missing rows in the neighborhood column. Since we have all of the Latitude and Longitude data for each of these missing rows, the missing data will still be useable for our visualizations in Tableau.\nNote: Further cleaning of the missing neighborhood rows could be done using a reverse geocoding API, however, that is beyond the scope of this project\nThank you",
    "crumbs": [
      "Data Cleansing",
      "Project 1"
    ]
  },
  {
    "objectID": "resume.html#projects",
    "href": "resume.html#projects",
    "title": "Tucker Trost’s CV",
    "section": "",
    "text": "Superstore KPI Dashboard\n\nDeveloped dynamic KPI Dashboard built in Tableau\nUtilized complex parameters and calculated fields to present easily identifiableinformation to stakeholders\n\nPortland Crime Analysis\n\nExploratory data anlysis oin Portland, Oregon crime data\nData cleaning in Excel and SQL\nPython to analyze crime trends and gather data for visualization\nVisualized findings in a dynamic Tableau dashboard and offered recommendations for visitor safety"
  },
  {
    "objectID": "Cleansing_Projects/project1.html#prepare",
    "href": "Cleansing_Projects/project1.html#prepare",
    "title": "Portland Crime Analysis",
    "section": "Prepare",
    "text": "Prepare\n\n\nRead and format project data\n# Load in Data\npcrime_15 = pd.read_csv('CrimeData-2015.csv')\npcrime_16 = pd.read_csv('CrimeData-2016.csv')\npcrime_17 = pd.read_csv('CrimeData-2017.csv')\npcrime_18 = pd.read_csv('CrimeData-2018.csv')\npcrime_19 = pd.read_csv('CrimeData-2019.csv')\npcrime_20 = pd.read_csv('CrimeData-2020.csv')\npcrime_21 = pd.read_csv('CrimeData-2021.csv')\npcrime_22 = pd.read_csv('CrimeData-2022.csv')\npcrime_23 = pd.read_csv('CrimeData-2023.csv')\n\n# Combine Datasets\npcrime_combined = pd.concat([pcrime_15,pcrime_16,pcrime_17,pcrime_18,pcrime_19,pcrime_20,pcrime_21,pcrime_22,pcrime_23], ignore_index=True)\npcrime_combined.head()\n\n\n\n\n\n\n\n\n\n\nAddress\nCaseNumber\nCrimeAgainst\nNeighborhood\nOccurDate\nOccurTime\nOffenseCategory\nOffenseType\nOpenDataLat\nOpenDataLon\nOpenDataX\nOpenDataY\nReportDate\nOffenseCount\n\n\n\n\n0\nNaN\n15-X197430\nPerson\nPiedmont\n5/12/2015\n1400\nAssault Offenses\nIntimidation\nNaN\nNaN\nNaN\nNaN\n5/12/2015\n1\n\n\n1\nNaN\n15-X4282999\nPerson\nBuckman West\n5/1/2015\n2143\nAssault Offenses\nSimple Assault\nNaN\nNaN\nNaN\nNaN\n5/1/2015\n1\n\n\n2\nNaN\n15-X4283033\nPerson\nUniversity Park\n5/1/2015\n1625\nAssault Offenses\nSimple Assault\nNaN\nNaN\nNaN\nNaN\n5/1/2015\n1\n\n\n3\nNaN\n15-X4283218\nPerson\nMadison South\n5/1/2015\n1820\nAssault Offenses\nSimple Assault\nNaN\nNaN\nNaN\nNaN\n5/1/2015\n1\n\n\n4\nNaN\n15-X4283218\nPerson\nMadison South\n5/1/2015\n1820\nKidnapping/Abduction\nKidnapping/Abduction\nNaN\nNaN\nNaN\nNaN\n5/1/2015\n1\n\n\n\n\n\n\n\n\n\nWhat is our goal?\nThinking forward to the analysis that I want to perform with this data, I need to understand what I am looking for when it comes to cleaning. I know that I want to focus my analysis on the distribution of different offense types and categories across the various neighborhoods of Portland. Additionally, I’d like to get insight into the temporal trends that lie within the data. Based on this understanding, I get a better sense of what aspects of the data need to be cleaned.\n\n\nIdentify Missing Data\npcrime_combined.isna().sum()\n\n\nAddress            44998\nCaseNumber             0\nCrimeAgainst           0\nNeighborhood       17566\nOccurDate              0\nOccurTime              0\nOffenseCategory        0\nOffenseType            0\nOpenDataLat        56511\nOpenDataLon        56511\nOpenDataX          56511\nOpenDataY          56511\nReportDate             0\nOffenseCount           0\ndtype: int64\n\n\n\n\nInitial Observations\n\nA time to report column would be useful\n\nConvert OccurDate and ReportDate to datetime\nCreate a time to report column\n\nOpenDataX/Y don’t seem necessary for our analysis\n\nDrop OpenDataX and OpenDataY columns\n\nAddress column seems to be redundant as most entries are just a general location\n\nDrop Address column\n\nNeighborhood averages can be used to find lat/lon\n\nDrop rows with missing Neighborhood and OpenDataLat\nReplace all rows with neighborhood but missing Lat/Lon data with average Lat/Lon of their neighborhood",
    "crumbs": [
      "Data Cleansing",
      "Project 1"
    ]
  },
  {
    "objectID": "Cleansing_Projects/project1.html#data-cleaning",
    "href": "Cleansing_Projects/project1.html#data-cleaning",
    "title": "Portland Crime Analysis",
    "section": "Data Cleaning",
    "text": "Data Cleaning\n\n\nCleaning\n# Calculate average Lat/Lon for each neighborhood\nneighborhood_means = pcrime_combined.groupby('Neighborhood')[['OpenDataLat','OpenDataLon']].transform('mean')\n\n# Clean the data\npcrime_cleaned = (\n    pcrime_combined\n    .drop(columns=['Address', 'OpenDataX', 'OpenDataY'])  # Drop X/Y\n    .dropna(subset=['OpenDataLat', 'Neighborhood'], how='all')  # Drop missing lat/lon and Neighborhoods\n    .assign(\n        OccurDate=pd.to_datetime(pcrime_combined['OccurDate']),  # Convert dates to datetime\n        ReportDate=pd.to_datetime(pcrime_combined['ReportDate']),\n        ReportDiff=lambda x: (x['ReportDate'] - x['OccurDate']).dt.days,  # Calculate time to report\n        OpenDataLat=lambda x: x['OpenDataLat'].fillna(neighborhood_means['OpenDataLat']),  # Fill missing Lat/Lon with average Lat/Lon of given neighborhood\n        OpenDataLon=lambda x: x['OpenDataLon'].fillna(neighborhood_means['OpenDataLon']),\n        OccurTime=lambda x: x['OccurTime'].astype(str).str.zfill(4),  # Ensure time is in HHMM format\n        OccurDateTime=lambda x: pd.to_datetime(\n            x['OccurDate'].dt.strftime('%Y-%m-%d') + ' ' + \n            x['OccurTime'].str[:2] + ':' + x['OccurTime'].str[2:]\n        )  # Combine date and formatted time into datetime\n    )\n    .loc[lambda x: x['OccurDateTime'].dt.year.between(2015, 2023)]  # Filter rows with years within 2015–2023\n)\n\npcrime_cleaned\n\n\n\n\n\n\n\n\n\n\nCaseNumber\nCrimeAgainst\nNeighborhood\nOccurDate\nOccurTime\nOffenseCategory\nOffenseType\nOpenDataLat\nOpenDataLon\nReportDate\nOffenseCount\nReportDiff\nOccurDateTime\n\n\n\n\n0\n15-X197430\nPerson\nPiedmont\n2015-05-12\n1400\nAssault Offenses\nIntimidation\n45.575321\n-122.669950\n2015-05-12\n1\n0\n2015-05-12 14:00:00\n\n\n1\n15-X4282999\nPerson\nBuckman West\n2015-05-01\n2143\nAssault Offenses\nSimple Assault\n45.517973\n-122.659334\n2015-05-01\n1\n0\n2015-05-01 21:43:00\n\n\n2\n15-X4283033\nPerson\nUniversity Park\n2015-05-01\n1625\nAssault Offenses\nSimple Assault\n45.580393\n-122.727295\n2015-05-01\n1\n0\n2015-05-01 16:25:00\n\n\n3\n15-X4283218\nPerson\nMadison South\n2015-05-01\n1820\nAssault Offenses\nSimple Assault\n45.540839\n-122.578812\n2015-05-01\n1\n0\n2015-05-01 18:20:00\n\n\n4\n15-X4283218\nPerson\nMadison South\n2015-05-01\n1820\nKidnapping/Abduction\nKidnapping/Abduction\n45.540839\n-122.578812\n2015-05-01\n1\n0\n2015-05-01 18:20:00\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n531881\n23-225440\nSociety\nSylvan-Highlands\n2023-08-27\n1420\nWeapon Law Violations\nWeapons Law Violations\n45.508945\n-122.731195\n2023-08-27\n1\n0\n2023-08-27 14:20:00\n\n\n531882\n23-51637\nProperty\nArlington Heights\n2023-02-23\n0330\nMotor Vehicle Theft\nMotor Vehicle Theft\n45.506744\n-122.713355\n2023-02-25\n1\n2\n2023-02-23 03:30:00\n\n\n531883\n23-227984\nPerson\nGoose Hollow\n2023-08-30\n0920\nAssault Offenses\nAggravated Assault\n45.515555\n-122.693709\n2023-08-30\n1\n0\n2023-08-30 09:20:00\n\n\n531884\n23-40689\nProperty\nForest Park\n2023-02-13\n1130\nMotor Vehicle Theft\nMotor Vehicle Theft\n45.540437\n-122.736728\n2023-02-13\n1\n0\n2023-02-13 11:30:00\n\n\n531885\n23-137815\nProperty\nForest Park\n2023-05-23\n1300\nLarceny Offenses\nTheft From Motor Vehicle\n45.540437\n-122.736728\n2023-05-26\n1\n3\n2023-05-23 13:00:00\n\n\n\n\n521247 rows × 13 columns\n\n\n\n\nNow we can check and see how we did filling in our missing data.\n\n\nCheck missing data\npcrime_cleaned.isna().sum()\n\n\nCaseNumber            0\nCrimeAgainst          0\nNeighborhood       7870\nOccurDate             0\nOccurTime             0\nOffenseCategory       0\nOffenseType           0\nOpenDataLat           0\nOpenDataLon           0\nReportDate            0\nOffenseCount          0\nReportDiff            0\nOccurDateTime         0\ndtype: int64\n\n\n\nFinal Cleaning Thoughts\nWe have now cleaned our data into a useable state for our analysis. We went from many missing rows from in many columns to only 7881 missing rows in the neighborhood column. Since we have all of the Latitude and Longitude data for each of these missing rows, the missing data will still be useable for our visualizations in Tableau.\nNote: Further cleaning of the missing neighborhood rows could be done using a reverse geocoding API, however, that is beyond the scope of this project",
    "crumbs": [
      "Data Cleansing",
      "Project 1"
    ]
  },
  {
    "objectID": "Cleansing_Projects/project1.html#final-thoughts",
    "href": "Cleansing_Projects/project1.html#final-thoughts",
    "title": "Portland Crime Data Cleansing",
    "section": "Final Thoughts",
    "text": "Final Thoughts\nWe have now cleaned our data into a useable state for our analysis. We went from many missing rows from in many columns to only 7881 missing rows in the neighborhood column. Since we have all of the Latitude and Longitude data for each of these missing rows, the missing data will still be useable for our visualizations in Tableau.\nNote: Further cleaning of the missing neighborhood rows could be done using a reverse geocoding API, however, that is beyond the scope of this project\nThank you",
    "crumbs": [
      "Data Cleansing",
      "Project 1"
    ]
  },
  {
    "objectID": "Cleansing_Projects/project1.html#elevator-pitch",
    "href": "Cleansing_Projects/project1.html#elevator-pitch",
    "title": "Portland Crime Analysis",
    "section": "Elevator pitch",
    "text": "Elevator pitch\nThis project involves cleaning and exploring crime data from Portland, Oregon (2016-2023). After addressing missing data and unnecessary columns, we uncovered key trends in offense types, report times, and their relationship to neighborhood, day, and time. These insights help provide a clearer picture of crime patterns in the city.\n\nData Source\nThe dateset that I am using was accessed directly from Portland Police Bureau’s Open Data initiative; compiled from 2015-2023. This dataset is being used under this license.\n\n\nData Dictionary\nAddress: Address of reported incident at the 100 block level (e.g.: 1111 SW 2nd Ave would be 1100 Block SW 2nd Ave).\nCase Number: The case year and number for the reported incident (YY-######).\nCrime Against: Crime against category (Person, Property, or Society).\nNeighborhood: Neighborhood where incident occurred. If the neighborhood name is missing, the incident occurred outside of the boundaries of the Portland neighborhoods or at a location that could not be assigned to a specific address in the system. (e.g., Portland, near Washington Park, on the streetcar, etc.).\nOccur Date: Date the incident occurred. The exact occur date is sometimes unknown. In most situations, the first possible date the crime could have occurred is used as the occur date. (For example, victims return home from a week-long vacation to find their home burglarized. The burglary could have occurred at any point during the week. The first date of their vacation would be listed as the occur date.)\nOccur Time: Time the incident occurred. The exact occur time is sometimes unknown. In most situations, the first possible time the crime could have occurred is used as the occur time. The time is reported in the 24-hour clock format, with the first two digits representing hour (ranges from 00 to 23) and the second two digits representing minutes (ranges from 00 to 59).\nOffense Category: Category of offense (for example, Assault Offenses).\nOffense Type: Type of offense (for example, Aggravated Assault)Note: The statistic for Homicide Offenses has been updated in the Group A Crimes report to align with the 2019 FBI NIBRS definitions. The statistic for Homicide Offenses includes (09A) Murder & Non-negligent Manslaughter and (09B) Negligent Manslaughter. As of January 1, 2019, the FBI expanded the definition of negligent manslaughter to include traffic fatalities that result in an arrest for driving under the influence, distracted driving, or reckless driving. The change in definition impacts the 2019 homicide offenses statistic and the comparability of 2019 homicide statistics to prior year.\nOpen Data Lat/Lon: Generalized Latitude / Longitude of the reported incident. For offenses that occurred at a specific address, the point is mapped to the block’s midpoint. Offenses that occurred at an intersection is mapped to the intersection centroid.\nOpen Data X/Y: Generalized XY point of the reported incident. For offenses that occurred at a specific address, the point is mapped to the block’s midpoint. Offenses that occurred at an intersection is mapped to the intersection centroid. To protect the identity of victims and other privacy concerns, the points of certain case types are not released. XY points use the Oregon State Plane North (3601), NAD83 HARN, US International Feet coordinate system.\nOffense Count: Number of offenses per incident. Offenses (i.e. this field) are summed for counting purposes.",
    "crumbs": [
      "Data Cleansing",
      "Project 1"
    ]
  },
  {
    "objectID": "Cleansing_Projects/project1.html#my-tableau-dashboard",
    "href": "Cleansing_Projects/project1.html#my-tableau-dashboard",
    "title": "Portland Crime Data Cleansing",
    "section": "My Tableau Dashboard",
    "text": "My Tableau Dashboard\nBelow is an embedded Tableau dashboard:",
    "crumbs": [
      "Data Cleansing",
      "Project 1"
    ]
  },
  {
    "objectID": "sql.html",
    "href": "sql.html",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics",
    "crumbs": [
      "SQL"
    ]
  },
  {
    "objectID": "sql.html#title-2-header",
    "href": "sql.html#title-2-header",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics",
    "crumbs": [
      "SQL"
    ]
  },
  {
    "objectID": "SQL/project1.html",
    "href": "SQL/project1.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Project 1"
    ]
  },
  {
    "objectID": "Cleansing_Projects/project1.html#data-exploration",
    "href": "Cleansing_Projects/project1.html#data-exploration",
    "title": "Portland Crime Analysis",
    "section": "Data Exploration",
    "text": "Data Exploration\n\nThoughts\n\nTemporal Trends\n\nhour/Day/month/year trends\n\nCrime distributions\n\ncategories/types/crimeagainst\nreportdiff by offense type\n\nNeighborhood\n\ntype/category distributions\nreportdiff by neighborhood\noffense count by neighborhood\n\n\n\nTemporal Trends\n\n\nyear-count\npcrime_test = pcrime_cleaned.copy()\n\n# Year Count\npcrime_test['OccurDateTime'] = pd.to_datetime(pcrime_test['OccurDateTime'])\n\nyear_count = pcrime_test.groupby(pcrime_test['OccurDateTime'].dt.year)['OffenseCount'].sum().reset_index()\n\nyear_count.rename(columns={year_count.columns[0]: 'Year'}, inplace=True)\n\nyear_count_fig = ggplot(year_count, aes(x='Year', y='OffenseCount')) + \\\n    geom_line(color='#2e6f40', size=1.5) + \\\n    geom_point(color='#2e6f40', size=3) + \\\n    labs(title='Offense Counts by Year', x='Year', y='Offense Count') + \\\n    theme_minimal2() + \\\n    theme(\n        plot_title=element_text(size=16, face='bold'),\n        axis_title_x=element_text(size=12, face='bold'),\n        axis_title_y=element_text(size=12, face='bold'),\n        axis_text_x=element_text(size=10, angle=45), \n        axis_text_y=element_text(size=10),\n        panel_grid_minor=element_blank()\n    )\n\nyear_count_fig\n\n\n   \n   \n\n\n\nObservations\nThis chart shows that offense counts remained relatively stable until the pandemic. Starting in 2020, offenses per year surged dramatically through 2022, followed by a sharp decline heading into 2023. This trend underscores the potential impact of the pandemic and lockdowns on crime rates. As the world has gradually returned to normal, it appears crime may be starting to stabilize again.\n\n\nmonth-count\n# Month Count\n\nmonth_count = pcrime_test.groupby(pcrime_test['OccurDateTime'].dt.month)['OffenseCount'].sum().reset_index()\n\nmonth_count.rename(columns={month_count.columns[0]: 'Month'}, inplace=True)\n\nmonth_count_fig = ggplot(month_count, aes(x=\"Month\", y=\"OffenseCount\")) + \\\n    geom_line(color='#2e6f40', size=1.5) + \\\n    geom_point(color='#2e6f40', size=3) + \\\n    labs(title='Offense Counts by Month', x='Month', y='Offense Count') + \\\n    scale_x_continuous(breaks=list(range(1, 13))) + \\\n    theme_minimal2() + \\\n    theme(\n        plot_title=element_text(size=16, face='bold'),\n        axis_title_x=element_text(size=12, face='bold'),\n        axis_title_y=element_text(size=12, face='bold'),\n        axis_text_x=element_text(size=10), \n        axis_text_y=element_text(size=10),\n        panel_grid_minor=element_blank()\n    )\n\nmonth_count_fig\n\n\n   \n   \n\n\n\n\nObservations\nWhen examining the number of offenses per month, it’s clear that crime tends to slow down during the winter months and gradually rises through the summer and into the rest of the year. This pattern could be influenced by colder weather during winter, however, maybe bringing in data on weather patterns could shed more light on this trend.\n\n\nweekday_count\n# Weekday Count\nweekday_count = pcrime_test.groupby(pcrime_test['OccurDateTime'].dt.weekday)['OffenseCount'].sum().reset_index()\n\nweekday_count.rename(columns={weekday_count.columns[0]: 'Weekday'}, inplace=True)\n\nweekday_count_fig = ggplot(weekday_count, aes(x=\"Weekday\", y=\"OffenseCount\")) + \\\n    geom_line(color='#2e6f40', size=1.5) + \\\n    geom_point(color='#2e6f40', size=3) + \\\n    labs(title='Offense Counts by Weekday', x='Weekday', y='Offense Count') + \\\n    theme_minimal2() + \\\n    theme(\n        plot_title=element_text(size=16, face='bold'),\n        axis_title_x=element_text(size=12, face='bold'),\n        axis_title_y=element_text(size=12, face='bold'),\n        axis_text_x=element_text(size=10), \n        axis_text_y=element_text(size=10),\n        panel_grid_minor=element_blank()\n    )\n\nweekday_count_fig\n\n\n   \n   \n\n\n\n\nObservations\nFriday stands out as the day with the most criminal activity. As the start of the weekend, it’s when many people go out, and with more people out, it’s likely that more opportunities for crime arise.\n\n\nhour_count\n# Hour Count\nhour_count = pcrime_test.groupby(pcrime_test['OccurDateTime'].dt.hour)['OffenseCount'].sum().reset_index()\n\nhour_count.rename(columns={hour_count.columns[0]: 'Hour'}, inplace=True)\n\nhour_count_fig = ggplot(hour_count, aes(x=\"Hour\", y=\"OffenseCount\")) + \\\n    geom_line(color='#2e6f40', size=1.5) + \\\n    geom_point(color='#2e6f40', size=3) + \\\n    labs(title='Offense Counts by Hour', x='Hour', y='Offense Count') + \\\n    scale_x_continuous(breaks=list(range(0, 25))) + \\\n    theme_minimal2() + \\\n    theme(\n        plot_title=element_text(size=16, face='bold'),\n        axis_title_x=element_text(size=12, face='bold'),\n        axis_title_y=element_text(size=12, face='bold'),\n        axis_text_x=element_text(size=10), \n        axis_text_y=element_text(size=10),\n        panel_grid_minor=element_blank()\n    )\n\nhour_count_fig\n\n\n   \n   \n\n\n\n\nObservations\nThe trend in offenses by time of day suggests that crime rates may be reactive to human activity. From 1 AM to 7 AM, when most people are asleep, crime rates dip. As the day begins, crime increases, peaking around noon—possibly corresponding with lunch breaks—before dropping again when people return to work. Another spike occurs at 5 PM, when many people get off work. Crime rates remain relatively stable throughout the evening, only to surge again at midnight when most people are asleep.\n\n\n\nCrime Distribution Trends\n\n\ncrime_against_count\n# Crime Against Count\ncrime_against = pcrime_test.groupby('CrimeAgainst',as_index=False)['OffenseCount'].sum()\ncrime_against_fig = ggplot(crime_against, aes(x='CrimeAgainst', y='OffenseCount')) + \\\n    geom_bar(stat='identity', fill='#2e6f40', color='black') + \\\n    labs(title='Offense Counts by Crime Type', x='Crime Against', y='Offense Count') + \\\n    theme_minimal2() + \\\n    theme(\n        plot_title=element_text(size=16, face='bold'),\n        axis_title_x=element_text(size=12, face='bold'),\n        axis_title_y=element_text(size=12, face='bold'),\n        axis_text_x=element_text(size=10), \n        axis_text_y=element_text(size=10),\n        panel_grid_minor=element_blank()\n    )\n\ncrime_against_fig\n\n\n   \n   \n\n\n\nObservations\nIt’s evident that crimes against property are much more common than other categories. My initial thought is that property crimes may be more frequent because they’re often easier to commit, both physically and morally. Property doesn’t involve direct harm to individuals, which could make it feel less risky or less severe to potential offenders.\n\n\ncrime_against_report\n# Crime Against Report Time\ncrime_against_report = pcrime_test.groupby('CrimeAgainst',as_index=False)['ReportDiff'].mean()\ncrime_against_report_fig = ggplot(crime_against_report, aes(x='CrimeAgainst', y='ReportDiff')) + \\\n    geom_bar(stat='identity', fill='#2e6f40', color='black') + \\\n    labs(title='Average Report Time by Crime Type', x='Crime Against', y='ReportDiff') + \\\n    theme_minimal2() + \\\n    theme(\n        plot_title=element_text(size=16, face='bold'),\n        axis_title_x=element_text(size=12, face='bold'),\n        axis_title_y=element_text(size=12, face='bold'),\n        axis_text_x=element_text(size=10), \n        axis_text_y=element_text(size=10),\n        panel_grid_minor=element_blank()\n    )\n\ncrime_against_report_fig\n\n\n   \n   \n\n\n\n\nObservations\nThe differences in report time are the most intriguing insight to me. Both crimes against a person and property have an average reporting time of over 6 days after the incident. I’d love to explore this further to understand the factors that might contribute to this delay and whether there are specific circumstances or patterns influencing the reporting process.\n\n\ncrime_category_count\n# Crime Category Count\ncrime_cat = pcrime_test.groupby('OffenseCategory',as_index=False)['OffenseCount'].sum().sort_values(by='OffenseCount', ascending=False).head(10)\ncrime_cat_fig = ggplot(crime_cat, aes(x='OffenseCount', y='OffenseCategory')) + \\\n    geom_bar(stat='identity', fill='#2e6f40', color='black') + \\\n    labs(title='Offense Counts by Category', x='Offense COunt', y='Offense Category') + \\\n    theme_minimal2() + \\\n    theme(\n        plot_title=element_text(size=16, face='bold'),\n        axis_title_x=element_text(size=12, face='bold'),\n        axis_title_y=element_text(size=12, face='bold'),\n        axis_text_x=element_text(size=10), \n        axis_text_y=element_text(size=10),\n        panel_grid_minor=element_blank()\n    )\n\ncrime_cat_fig\n\n\n   \n   \n\n\n\n\nObservations\nWhen examining the most common offenses by category, larceny far outweighs the others, further reinforcing our findings about the prevalence of property crimes. This aligns with the broader trend of property crimes being more frequent compared to other categories.\n\n\ncrime_category_report\n# Crime Category Report Time\ncrime_cat_report = pcrime_test.groupby('OffenseCategory',as_index=False)['ReportDiff'].mean().sort_values(by='ReportDiff', ascending=False).head(10)\ncrime_cat_report_fig = ggplot(crime_cat_report, aes(x='ReportDiff', y='OffenseCategory')) + \\\n    geom_bar(stat='identity', fill='#2e6f40', color='black') + \\\n    labs(title='Average Report Time by Category', x='Average Time to Report (Days)', y='Offense Category') + \\\n    theme_minimal2() + \\\n    theme(\n        plot_title=element_text(size=16, face='bold'),\n        axis_title_x=element_text(size=12, face='bold'),\n        axis_title_y=element_text(size=12, face='bold'),\n        axis_text_x=element_text(size=10), \n        axis_text_y=element_text(size=10),\n        panel_grid_minor=element_blank()\n    )\n\ncrime_cat_report_fig\n\n\n   \n   \n\n\n\n\nObservation\nOnce again, report time reveals some intriguing insights. The categories with the longest average reporting times tend to be more serious crimes, such as embezzlement, compared to simpler offenses like robbery. This could be due to several factors, including the time it takes for these cases to develop before they are reported. Additionally, there may be a strong emotional aspect, especially in sexual or violent crimes, which could delay the decision to report.\n\n\ncrime_type_report\n# Crime Type Report Time\ncrime_type_report = pcrime_test.groupby('OffenseType',as_index=False)['ReportDiff'].mean().sort_values(by='ReportDiff', ascending=False).head(10)\ncrime_type_report_fig = ggplot(crime_type_report, aes(x='ReportDiff', y='OffenseType')) + \\\n    geom_bar(stat='identity', fill='#2e6f40', color='black') + \\\n    labs(title='Average Report Time by Type', x='Average Time to Report (Days)', y='Offense Type') + \\\n    theme_minimal2() + \\\n    theme(\n        plot_title=element_text(size=16, face='bold'),\n        axis_title_x=element_text(size=12, face='bold'),\n        axis_title_y=element_text(size=12, face='bold'),\n        axis_text_x=element_text(size=10), \n        axis_text_y=element_text(size=10),\n        panel_grid_minor=element_blank()\n    )\n\ncrime_type_report_fig\n\n\n   \n   \n\n\n\n\n\nObservations\nThis chart seems to further confirm my earlier thoughts about report times. It’s clear that the offense types with the longest average report times are indeed very serious crimes, with almost all of them being sexual in nature. This suggests that the complexity and emotional weight of these crimes could contribute to the delay in reporting.\n\n\ncrime_type_count\n# Crime Type Count\ncrime_type = pcrime_test.groupby('OffenseType',as_index=False)['OffenseCount'].sum().sort_values(by='OffenseCount', ascending=False).head(10)\ncrime_type_fig = ggplot(crime_type, aes(x='OffenseCount', y='OffenseType')) + \\\n    geom_bar(stat='identity', fill='#2e6f40', color='black') + \\\n    labs(title='Offense Counts by Type', x='Offense COunt', y='Offense Type') + \\\n    theme_minimal2() + \\\n    theme(\n        plot_title=element_text(size=16, face='bold'),\n        axis_title_x=element_text(size=12, face='bold'),\n        axis_title_y=element_text(size=12, face='bold'),\n        axis_text_x=element_text(size=10), \n        axis_text_y=element_text(size=10),\n        panel_grid_minor=element_blank()\n    )\n\ncrime_type_fig\n\n\n   \n   \n\n\n\nObservations\nAs seen earlier, larceny offenses dominate the most common crime types. This could be due to the fact that larceny crimes tend to be quick and opportunistic, making them more likely to occur compared to more serious offenses, which often require more time, planning, and emotional involvement.\n\n\n\nNeighborhood Trends\n\n\nneigh_count\n# Neighborhood Count\nneigh_count = pcrime_test.groupby('Neighborhood',as_index=False)['OffenseCount'].sum().sort_values(by='OffenseCount', ascending=False).head(10)\nneigh_count_fig = ggplot(neigh_count,aes(y=neigh_count[\"Neighborhood\"],x=neigh_count[\"OffenseCount\"]))+ \\\n    geom_bar(stat='identity',fill='#2e6f40', color='black')+ \\\n    labs(title='Offense Count by Neighborhood', x='Offense Count', y='Neighborhood') + \\\n    theme_minimal2() + \\\n    theme(\n        plot_title=element_text(size=16, face='bold'),\n        axis_title_x=element_text(size=12, face='bold'),\n        axis_title_y=element_text(size=12, face='bold'),\n        axis_text_x=element_text(size=10), \n        axis_text_y=element_text(size=10),\n        panel_grid_minor=element_blank()\n    )\nneigh_count_fig\n\n\n   \n   \n\n\n\nObservations\nExploring neighborhood trends reveals that Downtown and Hazelwood have disproportionately higher numbers of offenses compared to other areas. However, incorporating data on the size, population, and popularity of these neighborhoods could provide valuable context and help explain these counts more effectively.\n\n\nneigh_report\n# Neighborhood Report Time\nneigh_report = pcrime_test.groupby('Neighborhood',as_index=False)['ReportDiff'].mean().sort_values(by='ReportDiff', ascending=False).head(10)\nneigh_report_fig = ggplot(neigh_report, aes(x='ReportDiff', y='Neighborhood')) + \\\n    geom_bar(stat='identity', fill='#2e6f40', color='black') + \\\n    labs(title='Average Report Time by Neighborhood', x='Average Report Time (Days)', y='Neighborhood') + \\\n    theme_minimal2() + \\\n    theme(\n        plot_title=element_text(size=16, face='bold'),\n        axis_title_x=element_text(size=12, face='bold'),\n        axis_title_y=element_text(size=12, face='bold'),\n        axis_text_x=element_text(size=10), \n        axis_text_y=element_text(size=10),\n        panel_grid_minor=element_blank()\n    )\n\nneigh_report_fig\n\n\n   \n   \n\n\n##### Observations\nThis is an area where I feel more exploration is needed. By diving deeper into the most common offenses in each neighborhood, I suspect it could shed light on why some neighborhoods experience longer reporting times than others.",
    "crumbs": [
      "Data Cleansing",
      "Project 1"
    ]
  },
  {
    "objectID": "Cleansing_Projects/project1.html#current-final-observations",
    "href": "Cleansing_Projects/project1.html#current-final-observations",
    "title": "Portland Crime Analysis",
    "section": "Current Final Observations",
    "text": "Current Final Observations\nThis project is still a work in progress, and there’s plenty more to explore and visualize to better address some of the questions raised during my analysis. That said, the work completed so far has revealed some fascinating insights into crime patterns in Portland, Oregon. Thank you for taking the time to check out my project—I hope you’ll return to see the updates as it continues to develop!",
    "crumbs": [
      "Data Cleansing",
      "Project 1"
    ]
  },
  {
    "objectID": "Cleansing_Projects/pcrime.html#elevator-pitch",
    "href": "Cleansing_Projects/pcrime.html#elevator-pitch",
    "title": "Portland Crime Analysis",
    "section": "Elevator pitch",
    "text": "Elevator pitch\nThis project involves cleaning and exploring crime data from Portland, Oregon (2016-2023). After addressing missing data and unnecessary columns, we uncovered key trends in offense types, report times, and their relationship to neighborhood, day, and time. These insights help provide a clearer picture of crime patterns in the city.\n\nData Source\nThe dateset that I am using was accessed directly from Portland Police Bureau’s Open Data initiative; compiled from 2015-2023. This dataset is being used under this license.\n\n\nData Dictionary\nAddress: Address of reported incident at the 100 block level (e.g.: 1111 SW 2nd Ave would be 1100 Block SW 2nd Ave).\nCase Number: The case year and number for the reported incident (YY-######).\nCrime Against: Crime against category (Person, Property, or Society).\nNeighborhood: Neighborhood where incident occurred. If the neighborhood name is missing, the incident occurred outside of the boundaries of the Portland neighborhoods or at a location that could not be assigned to a specific address in the system. (e.g., Portland, near Washington Park, on the streetcar, etc.).\nOccur Date: Date the incident occurred. The exact occur date is sometimes unknown. In most situations, the first possible date the crime could have occurred is used as the occur date. (For example, victims return home from a week-long vacation to find their home burglarized. The burglary could have occurred at any point during the week. The first date of their vacation would be listed as the occur date.)\nOccur Time: Time the incident occurred. The exact occur time is sometimes unknown. In most situations, the first possible time the crime could have occurred is used as the occur time. The time is reported in the 24-hour clock format, with the first two digits representing hour (ranges from 00 to 23) and the second two digits representing minutes (ranges from 00 to 59).\nOffense Category: Category of offense (for example, Assault Offenses).\nOffense Type: Type of offense (for example, Aggravated Assault)Note: The statistic for Homicide Offenses has been updated in the Group A Crimes report to align with the 2019 FBI NIBRS definitions. The statistic for Homicide Offenses includes (09A) Murder & Non-negligent Manslaughter and (09B) Negligent Manslaughter. As of January 1, 2019, the FBI expanded the definition of negligent manslaughter to include traffic fatalities that result in an arrest for driving under the influence, distracted driving, or reckless driving. The change in definition impacts the 2019 homicide offenses statistic and the comparability of 2019 homicide statistics to prior year.\nOpen Data Lat/Lon: Generalized Latitude / Longitude of the reported incident. For offenses that occurred at a specific address, the point is mapped to the block’s midpoint. Offenses that occurred at an intersection is mapped to the intersection centroid.\nOpen Data X/Y: Generalized XY point of the reported incident. For offenses that occurred at a specific address, the point is mapped to the block’s midpoint. Offenses that occurred at an intersection is mapped to the intersection centroid. To protect the identity of victims and other privacy concerns, the points of certain case types are not released. XY points use the Oregon State Plane North (3601), NAD83 HARN, US International Feet coordinate system.\nOffense Count: Number of offenses per incident. Offenses (i.e. this field) are summed for counting purposes."
  },
  {
    "objectID": "Cleansing_Projects/pcrime.html#prepare",
    "href": "Cleansing_Projects/pcrime.html#prepare",
    "title": "Portland Crime Analysis",
    "section": "Prepare",
    "text": "Prepare\n\n\nRead and format project data\n# Load in Data\npcrime_15 = pd.read_csv('CrimeData-2015.csv')\npcrime_16 = pd.read_csv('CrimeData-2016.csv')\npcrime_17 = pd.read_csv('CrimeData-2017.csv')\npcrime_18 = pd.read_csv('CrimeData-2018.csv')\npcrime_19 = pd.read_csv('CrimeData-2019.csv')\npcrime_20 = pd.read_csv('CrimeData-2020.csv')\npcrime_21 = pd.read_csv('CrimeData-2021.csv')\npcrime_22 = pd.read_csv('CrimeData-2022.csv')\npcrime_23 = pd.read_csv('CrimeData-2023.csv')\n\n# Combine Datasets\npcrime_combined = pd.concat([pcrime_15,pcrime_16,pcrime_17,pcrime_18,pcrime_19,pcrime_20,pcrime_21,pcrime_22,pcrime_23], ignore_index=True)\npcrime_combined.head()\n\n\n\n\n\n\n\n\n\nAddress\nCaseNumber\nCrimeAgainst\nNeighborhood\nOccurDate\nOccurTime\nOffenseCategory\nOffenseType\nOpenDataLat\nOpenDataLon\nOpenDataX\nOpenDataY\nReportDate\nOffenseCount\n\n\n\n\n0\nNaN\n15-X197430\nPerson\nPiedmont\n5/12/2015\n1400\nAssault Offenses\nIntimidation\nNaN\nNaN\nNaN\nNaN\n5/12/2015\n1\n\n\n1\nNaN\n15-X4282999\nPerson\nBuckman West\n5/1/2015\n2143\nAssault Offenses\nSimple Assault\nNaN\nNaN\nNaN\nNaN\n5/1/2015\n1\n\n\n2\nNaN\n15-X4283033\nPerson\nUniversity Park\n5/1/2015\n1625\nAssault Offenses\nSimple Assault\nNaN\nNaN\nNaN\nNaN\n5/1/2015\n1\n\n\n3\nNaN\n15-X4283218\nPerson\nMadison South\n5/1/2015\n1820\nAssault Offenses\nSimple Assault\nNaN\nNaN\nNaN\nNaN\n5/1/2015\n1\n\n\n4\nNaN\n15-X4283218\nPerson\nMadison South\n5/1/2015\n1820\nKidnapping/Abduction\nKidnapping/Abduction\nNaN\nNaN\nNaN\nNaN\n5/1/2015\n1\n\n\n\n\n\n\n\n\nWhat is our goal?\nThinking forward to the analysis that I want to perform with this data, I need to understand what I am looking for when it comes to cleaning. I know that I want to focus my analysis on the distribution of different offense types and categories across the various neighborhoods of Portland. Additionally, I’d like to get insight into the temporal trends that lie within the data. Based on this understanding, I get a better sense of what aspects of the data need to be cleaned.\n\n\nIdentify Missing Data\npcrime_combined.isna().sum()\n\n\nAddress            44998\nCaseNumber             0\nCrimeAgainst           0\nNeighborhood       17566\nOccurDate              0\nOccurTime              0\nOffenseCategory        0\nOffenseType            0\nOpenDataLat        56511\nOpenDataLon        56511\nOpenDataX          56511\nOpenDataY          56511\nReportDate             0\nOffenseCount           0\ndtype: int64\n\n\n\n\nInitial Observations\n\nA time to report column would be useful\n\nConvert OccurDate and ReportDate to datetime\nCreate a time to report column\n\nOpenDataX/Y don’t seem necessary for our analysis\n\nDrop OpenDataX and OpenDataY columns\n\nAddress column seems to be redundant as most entries are just a general location\n\nDrop Address column\n\nNeighborhood averages can be used to find lat/lon\n\nDrop rows with missing Neighborhood and OpenDataLat\nReplace all rows with neighborhood but missing Lat/Lon data with average Lat/Lon of their neighborhood"
  },
  {
    "objectID": "Cleansing_Projects/pcrime.html#data-cleaning",
    "href": "Cleansing_Projects/pcrime.html#data-cleaning",
    "title": "Portland Crime Analysis",
    "section": "Data Cleaning",
    "text": "Data Cleaning\n\n\nCleaning\n# Calculate average Lat/Lon for each neighborhood\nneighborhood_means = pcrime_combined.groupby('Neighborhood')[['OpenDataLat','OpenDataLon']].transform('mean')\n\n# Clean the data\npcrime_cleaned = (\n    pcrime_combined\n    .drop(columns=['Address', 'OpenDataX', 'OpenDataY'])  # Drop X/Y\n    .dropna(subset=['OpenDataLat', 'Neighborhood'], how='all')  # Drop missing lat/lon and Neighborhoods\n    .assign(\n        OccurDate=pd.to_datetime(pcrime_combined['OccurDate']),  # Convert dates to datetime\n        ReportDate=pd.to_datetime(pcrime_combined['ReportDate']),\n        ReportDiff=lambda x: (x['ReportDate'] - x['OccurDate']).dt.days,  # Calculate time to report\n        OpenDataLat=lambda x: x['OpenDataLat'].fillna(neighborhood_means['OpenDataLat']),  # Fill missing Lat/Lon with average Lat/Lon of given neighborhood\n        OpenDataLon=lambda x: x['OpenDataLon'].fillna(neighborhood_means['OpenDataLon']),\n        OccurTime=lambda x: x['OccurTime'].astype(str).str.zfill(4),  # Ensure time is in HHMM format\n        OccurDateTime=lambda x: pd.to_datetime(\n            x['OccurDate'].dt.strftime('%Y-%m-%d') + ' ' + \n            x['OccurTime'].str[:2] + ':' + x['OccurTime'].str[2:]\n        )  # Combine date and formatted time into datetime\n    )\n    .loc[lambda x: x['OccurDateTime'].dt.year.between(2015, 2023)]  # Filter rows with years within 2015–2023\n)\n\npcrime_cleaned\n\n\n\n\n\n\n\n\n\nCaseNumber\nCrimeAgainst\nNeighborhood\nOccurDate\nOccurTime\nOffenseCategory\nOffenseType\nOpenDataLat\nOpenDataLon\nReportDate\nOffenseCount\nReportDiff\nOccurDateTime\n\n\n\n\n0\n15-X197430\nPerson\nPiedmont\n2015-05-12\n1400\nAssault Offenses\nIntimidation\n45.575321\n-122.669950\n2015-05-12\n1\n0\n2015-05-12 14:00:00\n\n\n1\n15-X4282999\nPerson\nBuckman West\n2015-05-01\n2143\nAssault Offenses\nSimple Assault\n45.517973\n-122.659334\n2015-05-01\n1\n0\n2015-05-01 21:43:00\n\n\n2\n15-X4283033\nPerson\nUniversity Park\n2015-05-01\n1625\nAssault Offenses\nSimple Assault\n45.580393\n-122.727295\n2015-05-01\n1\n0\n2015-05-01 16:25:00\n\n\n3\n15-X4283218\nPerson\nMadison South\n2015-05-01\n1820\nAssault Offenses\nSimple Assault\n45.540839\n-122.578812\n2015-05-01\n1\n0\n2015-05-01 18:20:00\n\n\n4\n15-X4283218\nPerson\nMadison South\n2015-05-01\n1820\nKidnapping/Abduction\nKidnapping/Abduction\n45.540839\n-122.578812\n2015-05-01\n1\n0\n2015-05-01 18:20:00\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n531881\n23-225440\nSociety\nSylvan-Highlands\n2023-08-27\n1420\nWeapon Law Violations\nWeapons Law Violations\n45.508945\n-122.731195\n2023-08-27\n1\n0\n2023-08-27 14:20:00\n\n\n531882\n23-51637\nProperty\nArlington Heights\n2023-02-23\n0330\nMotor Vehicle Theft\nMotor Vehicle Theft\n45.506744\n-122.713355\n2023-02-25\n1\n2\n2023-02-23 03:30:00\n\n\n531883\n23-227984\nPerson\nGoose Hollow\n2023-08-30\n0920\nAssault Offenses\nAggravated Assault\n45.515555\n-122.693709\n2023-08-30\n1\n0\n2023-08-30 09:20:00\n\n\n531884\n23-40689\nProperty\nForest Park\n2023-02-13\n1130\nMotor Vehicle Theft\nMotor Vehicle Theft\n45.540437\n-122.736728\n2023-02-13\n1\n0\n2023-02-13 11:30:00\n\n\n531885\n23-137815\nProperty\nForest Park\n2023-05-23\n1300\nLarceny Offenses\nTheft From Motor Vehicle\n45.540437\n-122.736728\n2023-05-26\n1\n3\n2023-05-23 13:00:00\n\n\n\n\n521247 rows × 13 columns\n\n\n\nNow we can check and see how we did filling in our missing data.\n\n\nCheck missing data\npcrime_cleaned.isna().sum()\n\n\nCaseNumber            0\nCrimeAgainst          0\nNeighborhood       7870\nOccurDate             0\nOccurTime             0\nOffenseCategory       0\nOffenseType           0\nOpenDataLat           0\nOpenDataLon           0\nReportDate            0\nOffenseCount          0\nReportDiff            0\nOccurDateTime         0\ndtype: int64\n\n\n\nFinal Cleaning Thoughts\nWe have now cleaned our data into a useable state for our analysis. We went from many missing rows from in many columns to only 7881 missing rows in the neighborhood column. Since we have all of the Latitude and Longitude data for each of these missing rows, the missing data will still be useable for our visualizations in Tableau.\nNote: Further cleaning of the missing neighborhood rows could be done using a reverse geocoding API, however, that is beyond the scope of this project"
  },
  {
    "objectID": "Cleansing_Projects/pcrime.html#data-exploration",
    "href": "Cleansing_Projects/pcrime.html#data-exploration",
    "title": "Portland Crime Analysis",
    "section": "Data Exploration",
    "text": "Data Exploration\n\nThoughts\n\nTemporal Trends\n\nhour/Day/month/year trends\n\nCrime distributions\n\ncategories/types/crimeagainst\nreportdiff by offense type\n\nNeighborhood\n\ntype/category distributions\nreportdiff by neighborhood\noffense count by neighborhood\n\n\n\nTemporal Trends\n\n\nyear-count\npcrime_test = pcrime_cleaned.copy()\n\n# Year Count\npcrime_test['OccurDateTime'] = pd.to_datetime(pcrime_test['OccurDateTime'])\n\nyear_count = pcrime_test.groupby(pcrime_test['OccurDateTime'].dt.year)['OffenseCount'].sum().reset_index()\n\nyear_count.rename(columns={year_count.columns[0]: 'Year'}, inplace=True)\n\nyear_count_fig = ggplot(year_count, aes(x='Year', y='OffenseCount')) + \\\n    geom_line(color='#2e6f40', size=1.5) + \\\n    geom_point(color='#2e6f40', size=3) + \\\n    labs(title='Offense Counts by Year', x='Year', y='Offense Count') + \\\n    theme_minimal2() + \\\n    theme(\n        plot_title=element_text(size=16, face='bold'),\n        axis_title_x=element_text(size=12, face='bold'),\n        axis_title_y=element_text(size=12, face='bold'),\n        axis_text_x=element_text(size=10, angle=45), \n        axis_text_y=element_text(size=10),\n        panel_grid_minor=element_blank()\n    )\n\nyear_count_fig\n\n\n   \n   \n\n\n\nObservations\nThis chart shows that offense counts remained relatively stable until the pandemic. Starting in 2020, offenses per year surged dramatically through 2022, followed by a sharp decline heading into 2023. This trend underscores the potential impact of the pandemic and lockdowns on crime rates. As the world has gradually returned to normal, it appears crime may be starting to stabilize again.\n\n\nmonth-count\n# Month Count\n\nmonth_count = pcrime_test.groupby(pcrime_test['OccurDateTime'].dt.month)['OffenseCount'].sum().reset_index()\n\nmonth_count.rename(columns={month_count.columns[0]: 'Month'}, inplace=True)\n\nmonth_count_fig = ggplot(month_count, aes(x=\"Month\", y=\"OffenseCount\")) + \\\n    geom_line(color='#2e6f40', size=1.5) + \\\n    geom_point(color='#2e6f40', size=3) + \\\n    labs(title='Offense Counts by Month', x='Month', y='Offense Count') + \\\n    scale_x_continuous(breaks=list(range(1, 13))) + \\\n    theme_minimal2() + \\\n    theme(\n        plot_title=element_text(size=16, face='bold'),\n        axis_title_x=element_text(size=12, face='bold'),\n        axis_title_y=element_text(size=12, face='bold'),\n        axis_text_x=element_text(size=10), \n        axis_text_y=element_text(size=10),\n        panel_grid_minor=element_blank()\n    )\n\nmonth_count_fig\n\n\n   \n   \n\n\n\n\nObservations\nWhen examining the number of offenses per month, it’s clear that crime tends to slow down during the winter months and gradually rises through the summer and into the rest of the year. This pattern could be influenced by colder weather during winter, however, maybe bringing in data on weather patterns could shed more light on this trend.\n\n\nweekday_count\n# Weekday Count\nweekday_count = pcrime_test.groupby(pcrime_test['OccurDateTime'].dt.weekday)['OffenseCount'].sum().reset_index()\n\nweekday_count.rename(columns={weekday_count.columns[0]: 'Weekday'}, inplace=True)\n\nweekday_count_fig = ggplot(weekday_count, aes(x=\"Weekday\", y=\"OffenseCount\")) + \\\n    geom_line(color='#2e6f40', size=1.5) + \\\n    geom_point(color='#2e6f40', size=3) + \\\n    labs(title='Offense Counts by Weekday', x='Weekday', y='Offense Count') + \\\n    theme_minimal2() + \\\n    theme(\n        plot_title=element_text(size=16, face='bold'),\n        axis_title_x=element_text(size=12, face='bold'),\n        axis_title_y=element_text(size=12, face='bold'),\n        axis_text_x=element_text(size=10), \n        axis_text_y=element_text(size=10),\n        panel_grid_minor=element_blank()\n    )\n\nweekday_count_fig\n\n\n   \n   \n\n\n\n\nObservations\nFriday stands out as the day with the most criminal activity. As the start of the weekend, it’s when many people go out, and with more people out, it’s likely that more opportunities for crime arise.\n\n\nhour_count\n# Hour Count\nhour_count = pcrime_test.groupby(pcrime_test['OccurDateTime'].dt.hour)['OffenseCount'].sum().reset_index()\n\nhour_count.rename(columns={hour_count.columns[0]: 'Hour'}, inplace=True)\n\nhour_count_fig = ggplot(hour_count, aes(x=\"Hour\", y=\"OffenseCount\")) + \\\n    geom_line(color='#2e6f40', size=1.5) + \\\n    geom_point(color='#2e6f40', size=3) + \\\n    labs(title='Offense Counts by Hour', x='Hour', y='Offense Count') + \\\n    scale_x_continuous(breaks=list(range(0, 25))) + \\\n    theme_minimal2() + \\\n    theme(\n        plot_title=element_text(size=16, face='bold'),\n        axis_title_x=element_text(size=12, face='bold'),\n        axis_title_y=element_text(size=12, face='bold'),\n        axis_text_x=element_text(size=10), \n        axis_text_y=element_text(size=10),\n        panel_grid_minor=element_blank()\n    )\n\nhour_count_fig\n\n\n   \n   \n\n\n\n\nObservations\nThe trend in offenses by time of day suggests that crime rates may be reactive to human activity. From 1 AM to 7 AM, when most people are asleep, crime rates dip. As the day begins, crime increases, peaking around noon—possibly corresponding with lunch breaks—before dropping again when people return to work. Another spike occurs at 5 PM, when many people get off work. Crime rates remain relatively stable throughout the evening, only to surge again at midnight when most people are asleep.\n\n\n\nCrime Distribution Trends\n\n\ncrime_against_count\n# Crime Against Count\ncrime_against = pcrime_test.groupby('CrimeAgainst',as_index=False)['OffenseCount'].sum()\ncrime_against_fig = ggplot(crime_against, aes(x='CrimeAgainst', y='OffenseCount')) + \\\n    geom_bar(stat='identity', fill='#2e6f40', color='black') + \\\n    labs(title='Offense Counts by Crime Type', x='Crime Against', y='Offense Count') + \\\n    theme_minimal2() + \\\n    theme(\n        plot_title=element_text(size=16, face='bold'),\n        axis_title_x=element_text(size=12, face='bold'),\n        axis_title_y=element_text(size=12, face='bold'),\n        axis_text_x=element_text(size=10), \n        axis_text_y=element_text(size=10),\n        panel_grid_minor=element_blank()\n    )\n\ncrime_against_fig\n\n\n   \n   \n\n\n\nObservations\nIt’s evident that crimes against property are much more common than other categories. My initial thought is that property crimes may be more frequent because they’re often easier to commit, both physically and morally. Property doesn’t involve direct harm to individuals, which could make it feel less risky or less severe to potential offenders.\n\n\ncrime_against_report\n# Crime Against Report Time\ncrime_against_report = pcrime_test.groupby('CrimeAgainst',as_index=False)['ReportDiff'].mean()\ncrime_against_report_fig = ggplot(crime_against_report, aes(x='CrimeAgainst', y='ReportDiff')) + \\\n    geom_bar(stat='identity', fill='#2e6f40', color='black') + \\\n    labs(title='Average Report Time by Crime Type', x='Crime Against', y='ReportDiff') + \\\n    theme_minimal2() + \\\n    theme(\n        plot_title=element_text(size=16, face='bold'),\n        axis_title_x=element_text(size=12, face='bold'),\n        axis_title_y=element_text(size=12, face='bold'),\n        axis_text_x=element_text(size=10), \n        axis_text_y=element_text(size=10),\n        panel_grid_minor=element_blank()\n    )\n\ncrime_against_report_fig\n\n\n   \n   \n\n\n\n\nObservations\nThe differences in report time are the most intriguing insight to me. Both crimes against a person and property have an average reporting time of over 6 days after the incident. I’d love to explore this further to understand the factors that might contribute to this delay and whether there are specific circumstances or patterns influencing the reporting process.\n\n\ncrime_category_count\n# Crime Category Count\ncrime_cat = pcrime_test.groupby('OffenseCategory',as_index=False)['OffenseCount'].sum().sort_values(by='OffenseCount', ascending=False).head(10)\ncrime_cat_fig = ggplot(crime_cat, aes(x='OffenseCount', y='OffenseCategory')) + \\\n    geom_bar(stat='identity', fill='#2e6f40', color='black') + \\\n    labs(title='Offense Counts by Category', x='Offense COunt', y='Offense Category') + \\\n    theme_minimal2() + \\\n    theme(\n        plot_title=element_text(size=16, face='bold'),\n        axis_title_x=element_text(size=12, face='bold'),\n        axis_title_y=element_text(size=12, face='bold'),\n        axis_text_x=element_text(size=10), \n        axis_text_y=element_text(size=10),\n        panel_grid_minor=element_blank()\n    )\n\ncrime_cat_fig\n\n\n   \n   \n\n\n\n\nObservations\nWhen examining the most common offenses by category, larceny far outweighs the others, further reinforcing our findings about the prevalence of property crimes. This aligns with the broader trend of property crimes being more frequent compared to other categories.\n\n\ncrime_category_report\n# Crime Category Report Time\ncrime_cat_report = pcrime_test.groupby('OffenseCategory',as_index=False)['ReportDiff'].mean().sort_values(by='ReportDiff', ascending=False).head(10)\ncrime_cat_report_fig = ggplot(crime_cat_report, aes(x='ReportDiff', y='OffenseCategory')) + \\\n    geom_bar(stat='identity', fill='#2e6f40', color='black') + \\\n    labs(title='Average Report Time by Category', x='Average Time to Report (Days)', y='Offense Category') + \\\n    theme_minimal2() + \\\n    theme(\n        plot_title=element_text(size=16, face='bold'),\n        axis_title_x=element_text(size=12, face='bold'),\n        axis_title_y=element_text(size=12, face='bold'),\n        axis_text_x=element_text(size=10), \n        axis_text_y=element_text(size=10),\n        panel_grid_minor=element_blank()\n    )\n\ncrime_cat_report_fig\n\n\n   \n   \n\n\n\n\nObservation\nOnce again, report time reveals some intriguing insights. The categories with the longest average reporting times tend to be more serious crimes, such as embezzlement, compared to simpler offenses like robbery. This could be due to several factors, including the time it takes for these cases to develop before they are reported. Additionally, there may be a strong emotional aspect, especially in sexual or violent crimes, which could delay the decision to report.\n\n\ncrime_type_report\n# Crime Type Report Time\ncrime_type_report = pcrime_test.groupby('OffenseType',as_index=False)['ReportDiff'].mean().sort_values(by='ReportDiff', ascending=False).head(10)\ncrime_type_report_fig = ggplot(crime_type_report, aes(x='ReportDiff', y='OffenseType')) + \\\n    geom_bar(stat='identity', fill='#2e6f40', color='black') + \\\n    labs(title='Average Report Time by Type', x='Average Time to Report (Days)', y='Offense Type') + \\\n    theme_minimal2() + \\\n    theme(\n        plot_title=element_text(size=16, face='bold'),\n        axis_title_x=element_text(size=12, face='bold'),\n        axis_title_y=element_text(size=12, face='bold'),\n        axis_text_x=element_text(size=10), \n        axis_text_y=element_text(size=10),\n        panel_grid_minor=element_blank()\n    )\n\ncrime_type_report_fig\n\n\n   \n   \n\n\n\n\n\nObservations\nThis chart seems to further confirm my earlier thoughts about report times. It’s clear that the offense types with the longest average report times are indeed very serious crimes, with almost all of them being sexual in nature. This suggests that the complexity and emotional weight of these crimes could contribute to the delay in reporting.\n\n\ncrime_type_count\n# Crime Type Count\ncrime_type = pcrime_test.groupby('OffenseType',as_index=False)['OffenseCount'].sum().sort_values(by='OffenseCount', ascending=False).head(10)\ncrime_type_fig = ggplot(crime_type, aes(x='OffenseCount', y='OffenseType')) + \\\n    geom_bar(stat='identity', fill='#2e6f40', color='black') + \\\n    labs(title='Offense Counts by Type', x='Offense COunt', y='Offense Type') + \\\n    theme_minimal2() + \\\n    theme(\n        plot_title=element_text(size=16, face='bold'),\n        axis_title_x=element_text(size=12, face='bold'),\n        axis_title_y=element_text(size=12, face='bold'),\n        axis_text_x=element_text(size=10), \n        axis_text_y=element_text(size=10),\n        panel_grid_minor=element_blank()\n    )\n\ncrime_type_fig\n\n\n   \n   \n\n\n\nObservations\nAs seen earlier, larceny offenses dominate the most common crime types. This could be due to the fact that larceny crimes tend to be quick and opportunistic, making them more likely to occur compared to more serious offenses, which often require more time, planning, and emotional involvement.\n\n\n\nNeighborhood Trends\n\n\nneigh_count\n# Neighborhood Count\nneigh_count = pcrime_test.groupby('Neighborhood',as_index=False)['OffenseCount'].sum().sort_values(by='OffenseCount', ascending=False).head(10)\nneigh_count_fig = ggplot(neigh_count,aes(y=neigh_count[\"Neighborhood\"],x=neigh_count[\"OffenseCount\"]))+ \\\n    geom_bar(stat='identity',fill='#2e6f40', color='black')+ \\\n    labs(title='Offense Count by Neighborhood', x='Offense Count', y='Neighborhood') + \\\n    theme_minimal2() + \\\n    theme(\n        plot_title=element_text(size=16, face='bold'),\n        axis_title_x=element_text(size=12, face='bold'),\n        axis_title_y=element_text(size=12, face='bold'),\n        axis_text_x=element_text(size=10), \n        axis_text_y=element_text(size=10),\n        panel_grid_minor=element_blank()\n    )\nneigh_count_fig\n\n\n   \n   \n\n\n\nObservations\nExploring neighborhood trends reveals that Downtown and Hazelwood have disproportionately higher numbers of offenses compared to other areas. However, incorporating data on the size, population, and popularity of these neighborhoods could provide valuable context and help explain these counts more effectively.\n\n\nneigh_report\n# Neighborhood Report Time\nneigh_report = pcrime_test.groupby('Neighborhood',as_index=False)['ReportDiff'].mean().sort_values(by='ReportDiff', ascending=False).head(10)\nneigh_report_fig = ggplot(neigh_report, aes(x='ReportDiff', y='Neighborhood')) + \\\n    geom_bar(stat='identity', fill='#2e6f40', color='black') + \\\n    labs(title='Average Report Time by Neighborhood', x='Average Report Time (Days)', y='Neighborhood') + \\\n    theme_minimal2() + \\\n    theme(\n        plot_title=element_text(size=16, face='bold'),\n        axis_title_x=element_text(size=12, face='bold'),\n        axis_title_y=element_text(size=12, face='bold'),\n        axis_text_x=element_text(size=10), \n        axis_text_y=element_text(size=10),\n        panel_grid_minor=element_blank()\n    )\n\nneigh_report_fig\n\n\n   \n   \n\n\n\n\nObservations\nThis is an area where I feel more exploration is needed. By diving deeper into the most common offenses in each neighborhood, I suspect it could shed light on why some neighborhoods experience longer reporting times than others."
  },
  {
    "objectID": "Cleansing_Projects/pcrime.html#current-final-observations",
    "href": "Cleansing_Projects/pcrime.html#current-final-observations",
    "title": "Portland Crime Analysis",
    "section": "Current Final Observations",
    "text": "Current Final Observations\nThis project is still a work in progress, and there’s plenty more to explore and visualize to better address some of the questions raised during my analysis. That said, the work completed so far has revealed some fascinating insights into crime patterns in Portland, Oregon. Thank you for taking the time to check out my project—I hope you’ll return to see the updates as it continues to develop!"
  }
]